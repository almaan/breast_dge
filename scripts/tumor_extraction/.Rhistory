a <- as.character(a)
a
b
gsub(pattern = "[0-9]{1-2}\\.","",new_data$patient)
gsub(pattern = "?!\.","",new_data$patient)
gsub(pattern = "?!\\.","",new_data$patient)
gsub(pattern = "?<=\\.","",new_data$patient)
gsub(pattern = "?<=\\2","",new_data$patient)
gsub(pattern = "?<=2","",new_data$patient)
gsub(pattern = "(?<=\\.)","",new_data$patient)
gsub(pattern = "(?<=2)","",new_data$patient)
gsub(pattern = "?<=2","",new_data$patient)
gsub(pattern = "?<=2","hej",new_data$patient)
gsub(pattern = "?!2","hej",new_data$patient)
gsub(pattern = "?!2.","hej",new_data$patient)
gsub(pattern = "?!2*","hej",new_data$patient)
gsub(pattern = "(?!2)*","hej",new_data$patient)
strsplit(new_data$patient," ")
strsplit(new_data$patient,split = " ")
?strsplit
strsplit(a),split = " ")
strsplit(a,split = " ")
pat_list <- sapply(pat_list, function(x) { splt <- strsplit(x," ")
if (length(splt) > 1){
return(splt[2])
} else {
return(splt[1])
}
})
pat_list
pth <- "/home/alma/ST-2018/CNNp/DGE/rsc/subtype/curated_subtype2.csv"
subtypes <- c("her2lum,her2nonlum","luma","lumb","tnbc")
data <- read.csv(pth, sep ="\t", head = TRUE, stringsAsFactors = FALSE)
colnames(data) <- c("section","sub_rep")
data <- data[1:2]
sub_list <- c()
pat_list <- c()
rep_list <- c()
for (ii in 1:dim(data)[1]) {
if (!(data$section[ii] == "")) {
cur_pat <- data$section[ii]
cur_sub <- data$sub_rep[ii]
} else {
rep_list <- c(rep_list,data$sub_rep[ii])
pat_list <- c(pat_list, cur_pat)
sub_list <- c(sub_list, cur_sub)
}
}
pat_list <- sapply(pat_list, function(x) { splt <- strsplit(x," ")
if (length(splt) > 1){
return(splt[2])
} else {
return(splt[1])
}
})
pth <- "/home/alma/ST-2018/CNNp/DGE/rsc/subtype/curated_subtype2.csv"
subtypes <- c("her2lum,her2nonlum","luma","lumb","tnbc")
data <- read.csv(pth, sep ="\t", head = TRUE, stringsAsFactors = FALSE)
colnames(data) <- c("section","sub_rep")
data <- data[1:2]
sub_list <- c()
pat_list <- c()
rep_list <- c()
for (ii in 1:dim(data)[1]) {
if (!(data$section[ii] == "")) {
cur_pat <- data$section[ii]
cur_sub <- data$sub_rep[ii]
} else {
rep_list <- c(rep_list,data$sub_rep[ii])
pat_list <- c(pat_list, cur_pat)
sub_list <- c(sub_list, cur_sub)
}
}
pat_list
pat_list <- sapply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
return(splt[length(split)])
} else {
return(splt[1])
}
})
pat_list
pat_list <- sapply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt)
return(splt[length(split)])
} else {
return(splt[1])
}
})
pth <- "/home/alma/ST-2018/CNNp/DGE/rsc/subtype/curated_subtype2.csv"
subtypes <- c("her2lum,her2nonlum","luma","lumb","tnbc")
data <- read.csv(pth, sep ="\t", head = TRUE, stringsAsFactors = FALSE)
colnames(data) <- c("section","sub_rep")
data <- data[1:2]
sub_list <- c()
pat_list <- c()
rep_list <- c()
for (ii in 1:dim(data)[1]) {
if (!(data$section[ii] == "")) {
cur_pat <- data$section[ii]
cur_sub <- data$sub_rep[ii]
} else {
rep_list <- c(rep_list,data$sub_rep[ii])
pat_list <- c(pat_list, cur_pat)
sub_list <- c(sub_list, cur_sub)
}
}
pat_list <- sapply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt)
return(splt[length(split)])
} else {
return(splt[1])
}
})
new_data <- data.frame(patient = pat_list, replicate = rep_list, subtype = sub_list)
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/subtype.r', echo=TRUE)
pat_list
pat_list[1]
pat_list[8]
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/subtype.r', echo=TRUE)
new_data
pat_list
splt
pth <- "/home/alma/ST-2018/CNNp/DGE/rsc/subtype/curated_subtype2.csv"
subtypes <- c("her2lum,her2nonlum","luma","lumb","tnbc")
data <- read.csv(pth, sep ="\t", head = TRUE, stringsAsFactors = FALSE)
colnames(data) <- c("section","sub_rep")
data <- data[1:2]
sub_list <- c()
pat_list <- c()
rep_list <- c()
for (ii in 1:dim(data)[1]) {
if (!(data$section[ii] == "")) {
cur_pat <- as.character(data$section[ii])
cur_sub <- as.character(data$sub_rep[ii])
} else {
rep_list <- c(rep_list,as.character(data$sub_rep[ii]))
pat_list <- c(pat_list, cur_pat)
sub_list <- c(sub_list, cur_sub)
}
}
pat_list2 <- sapply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt)
return(splt[length(split)])
} else {
return(splt)
}
})
pat_list2
pat_list2[22]
pat_list2 <- sapply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt[2])
return(splt[length(split)])
} else {
return(splt)
}
})
pat_list2 <- sapply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt[2])
return(splt[2])
} else {
return(splt)
}
})
pat_list2
names(pat_list2)
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/subtype.r', echo=TRUE)
names(pat_list2)
pat_list 2
pat_list2
unlist(pat_list2)
pat_list2[4]
pat_list2 <- apply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt[2])
out <- splt[2]
} else {
out <- splt
}
return(out)
})
pat_list2 <- apply(pat_list, FUN(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt[2])
out <- splt[2]
} else {
out <- splt
}
return(out)
})
pat_list2 <- sapply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt[2])
out <- splt[2]
} else {
out <- splt
}
return(out)
})
pat_list
names(pat_list2)
pat_list2 <- lapply(pat_list, function(x) { splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
print(splt[2])
out <- splt[2]
} else {
out <- splt
}
return(out)
})
names(pat_list2)
pat_list2
unlevel(pat_list2)
unlist(pat_list2)
clean <- function(x) {
splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
out <- splt[2]
} else {
out <- splt
}
out <- strsplit(".",out)
out <- out[1]
print(out)
return(out)
}
pat_list2 <- lapply(pat_list, function(x) clean(x))
clean <- function(x) {
splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
out <- splt[2]
} else {
out <- splt
}
out <- strsplit(out,".")
out <- out[1]
print(out)
return(out)
}
pat_list2 <- lapply(pat_list, function(x) clean(x))
?strsplit
clean <- function(x) {
splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
out <- splt[2]
} else {
out <- splt
}
out <- strsplit(out,"\\.")
out <- out[1]
print(out)
return(out)
}
pat_list2 <- lapply(pat_list, function(x) clean(x))
clean <- function(x) {
splt <- unlist(strsplit(x," "))
if (length(splt) > 1){
out <- splt[2]
} else {
out <- splt
}
out <- unlist(strsplit(out,"\\."))
out <- out[1]
print(out)
return(out)
}
pat_list2 <- lapply(pat_list, function(x) clean(x))
pat_list2
pat_list2 <- unlist(lapply(pat_list, function(x) clean(x)))
pat_list2
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/subtype.r', echo=TRUE)
new_data
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/subtype.r', echo=TRUE)
new_data
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/subtype.r', echo=TRUE)
new_data
write.csv(paste(c(main_pth,output_file_name),collapse=""),row.names = FALSE)
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/subtype.r', echo=TRUE)
write.csv(paste(c(main_pth,output_file_name),collapse=""),row.names = FALSE)
write.csv(paste(c(main_pth,output_file_name),collapse=""))
write.csv(new_data,paste(c(main_pth,output_file_name),collapse=""),row.names = FALSE)
files <- list.dirs(ff_pth)
ff_pth <- "/home/alma/ST-2018/CNNp/DGE/data/YAO_feature_files"
files <- list.dirs(ff_pth)
files
ff_pth <- "/home/alma/ST-2018/CNNp/DGE/data/YAO_feature_files"
files <- list.files(ff_pth)
files
a <- files[1]
a
grep("[0-9]{5}_[A-Z][0-9]")
grep("[0-9]{5}_[A-Z][0-9]",a)
?substr
?grep
?grep
gregexpr("[0-9]{5}_[A-Z][0-9]",a)
gregexpr("[0-9]{5}_[A-Z][0-9]",a)[1]
u <- gregexpr("[0-9]{5}_[A-Z][0-9]",a)
u
unlist(u)
u
u[[1]]
u[[1]][2]
u[[1]][1]
u["math.length"]
ff_pth <- "/home/alma/ST-2018/CNNp/DGE/data/YAO_feature_files"
files <- list.files(ff_pth)
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",file)[1],8)
data <- read.csv(paste(c(main_pth,data_file_name),collapse=""), head = TRUE, stringsAsFactors = FALSE)
ff_pth <- "/home/alma/ST-2018/CNNp/DGE/data/YAO_feature_files"
files <- list.files(ff_pth)
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",file)[1],8)
data <- read.csv(paste(c(ff_pth,file),collapse=""), head = TRUE, stringsAsFactors = FALSE)
ff_pth <- "/home/alma/ST-2018/CNNp/DGE/data/YAO_feature_files/"
files <- list.files(ff_pth)
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",file)[1],8)
data <- read.csv(paste(c(ff_pth,file),collapse=""), head = TRUE, stringsAsFactors = FALSE)
file
files
ff_pth <- "/home/alma/ST-2018/CNNp/DGE/data/YAO_feature_files/"
files <- list.files(ff_pth)
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1],8)
data <- read.csv(paste(c(ff_pth,filename),collapse=""), head = TRUE, stringsAsFactors = FALSE)
filename <- files[1]
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1],8)
data <- read.csv(paste(c(ff_pth,filename),collapse=""), head = TRUE, stringsAsFactors = FALSE)
data
ff_pth <- "/home/alma/ST-2018/CNNp/DGE/data/YAO_feature_files/"
files <- list.files(ff_pth)
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1],8)
data <- read.csv(paste(c(ff_pth,filename),collapse=""), sep = "\t", row.names = 1,head = TRUE, stringsAsFactors = FALSE)
data
sub_data <- read.csv(subtype_info_pth, header = TRUE, stringsAsFactors = FALSE)
subtype_info_pth <- "/home/alma/ST-2018/CNNp/DGE/rsc/subtype/curated_subtype_final.csv"
sub_data <- read.csv(subtype_info_pth, header = TRUE, stringsAsFactors = FALSE)
sub_data
sub_join <- cbind(sub_data$patient,sub_data$replicate)
sub_join
sub_join <- paste(cbind(sub_data$patient,sub_data$replicate),collapse="_")
sub_join
sub_join <- paste(cbind(sub_data$patient,sub_data$replicate),sep="_")
sub_join
sub_join <- paste(c(sub_data$patient,sub_data$replicate),collapse="_")
sub_join
sub_join <- paste(cbind(sub_data$patient,sub_data$replicate),collapse="_")
sub_join
sub_join <- sapply(cbind(sub_data$patient,sub_data$replicate), function(x) paste(x,collapse="_"))
sub_join
cbind(sub_data$patient,sub_data$replicate)
a <- cbind(sub_data$patient,sub_data$replicate)
a[1]
a[2]
a[1:2]
a[1,1]
a[1,2]
a <- rbind(sub_data$patient,sub_data$replicate)
a
a[1]
a[2]
sub_join <- sort(apply(expand.grid(sub_data$patient, sub_data$replicate), 1, paste0, collapse = ""))
sub_join
sub_join <- sort(apply(expand.grid(sub_data$patient, sub_data$replicate), 1, paste0, collapse = "_"))
sub_join
name
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1],8)
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1],8)
for (filename in files) {
name <- substr(gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1],8)
splt <- strsplit(name,"_")
data <- read.csv(paste(c(ff_pth,filename),collapse=""), sep = "\t", row.names = 1,head = TRUE, stringsAsFactors = FALSE)
data$patient <- splt[1]
data$replicate <- splt[2]
data$subtype <- sub_data$subtype[which(name == sub_join)]
}
gregexpr()
?gregexpr
?substr
name <- substr(filename,gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1],8)
name
start <- gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1]
name <- substr(filename,start,start + 8)
start
start <- gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1]
start
start <- gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[[1]]
start
start <- gregexpr("[0-9]{5}_[A-Z][0-9]",filename)[1]
start
start[1]
start[[1]]
start
start[1]
start[[1]]
start[1][1]
start <- gregexpr("[0-9]{5}_[A-Z][0-9]",filename)
start
start[1]
start[1][1]
unlist(start)
start <- unlist(gregexpr("[0-9]{5}_[A-Z][0-9]",filename))
name <- substr(filename,start,start + 8)
splt <- strsplit(name,"_")
data <- read.csv(paste(c(ff_pth,filename),collapse=""), sep = "\t", row.names = 1,head = TRUE, stringsAsFactors = FALSE)
data$patient <- splt[1]
data$replicate <- splt[2]
data$subtype <- sub_data$subtype[which(name == sub_join)]
sub_data$subtype[which(name == sub_join)]
name
start <- unlist(gregexpr("[0-9]{5}_[A-Z][0-9]",filename))
name <- substr(filename,start,start + 7)
splt <- strsplit(name,"_")
data <- read.csv(paste(c(ff_pth,filename),collapse=""), sep = "\t", row.names = 1,head = TRUE, stringsAsFactors = FALSE)
data$patient <- splt[1]
data$replicate <- splt[2]
data$subtype <- sub_data$subtype[which(name == sub_join)]
data
name
sub_join
sub_join <- apply(expand.grid(sub_data$patient, sub_data$replicate), 1, paste0, collapse = "_")
sub_join
sub_join <- sapply(1:dim(sub_data)[1], function(x) paste(c(sub_data$patient,sub_data$replicate),collapse="_"))
sub_join
sub_data <- read.csv(subtype_info_pth, header = TRUE, stringsAsFactors = FALSE)
sub_join <- sapply(1:dim(sub_data)[1], function(x) paste(c(sub_data$patient[x],sub_data$replicate[x]),collapse="_"))
sub_join
start <- unlist(gregexpr("[0-9]{5}_[A-Z][0-9]",filename))
name <- substr(filename,start,start + 7)
splt <- strsplit(name,"_")
data <- read.csv(paste(c(ff_pth,filename),collapse=""), sep = "\t", row.names = 1,head = TRUE, stringsAsFactors = FALSE)
data$patient <- splt[1]
data$replicate <- splt[2]
data$subtype <- sub_data$subtype[which(name == sub_join)]
data
start <- unlist(gregexpr("[0-9]{5}_[A-Z][0-9]",filename))
name <- substr(filename,start,start + 7)
splt <- unlist(strsplit(name,"_"))
data <- read.csv(paste(c(ff_pth,filename),collapse=""), sep = "\t", row.names = 1,head = TRUE, stringsAsFactors = FALSE)
data$patient <- splt[1]
data$replicate <- splt[2]
data$subtype <- sub_data$subtype[which(name == sub_join)]
data
ff_pth <- "/home/alma/ST-2018/CNNp/DGE/data/YAO_feature_files/"
out_dir <- "/home/alma/ST-2018/CNNp/DGE/data/curated_feature_files"
subtype_info_pth <- "/home/alma/ST-2018/CNNp/DGE/rsc/subtype/curated_subtype_final.csv"
sub_data <- read.csv(subtype_info_pth, header = TRUE, stringsAsFactors = FALSE)
sub_join <- sapply(1:dim(sub_data)[1], function(x) paste(c(sub_data$patient[x],sub_data$replicate[x]),collapse="_"))
files <- list.files(ff_pth)
for (filename in files) {
start <- unlist(gregexpr("[0-9]{5}_[A-Z][0-9]",filename))
name <- substr(filename,start,start + 7)
splt <- unlist(strsplit(name,"_"))
data <- read.csv(paste(c(ff_pth,filename),collapse=""), sep = "\t", row.names = 1,head = TRUE, stringsAsFactors = FALSE)
data$patient <- splt[1]
data$replicate <- splt[2]
data$subtype <- sub_data$subtype[which(name == sub_join)]
outname <- paste(c(name,"feature_file.tsv"),collapse=".")
write.csv(new_data,paste(c(out_dir,output_file_name),collapse=""),row.names = TRUE,sep ="\t")
}
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/feature_file_generate.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/feature_file_generate.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/feature_file_generate.r', echo=TRUE)
warnings()
source('~/ST-2018/CNNp/DGE/scripts/prepare_data/feature_file_generate.r', echo=TRUE)
?topTags
g <- replicate(4,rnorm(5))
g
g > 0
colSums(g)
colSums(g > 0)
?calcNormFactors
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
p1 <- ggplot(data = fm, aes(x = xcoord,y = ycoord)) +
#            geom_polygon(data = spy1, fill = NA, color = "black", alpha = 0.2 ) +
geom_point(size = s.size, color = rgb(r=alpha.pos,g=0,b=alpha.neg, alpha = 0.8)) +
ggtitle(paste0(c(length(idx_pos),"most overexpressed and",length(idx_neg), "\n most underexpressed genes"),collapse = " "))
p3 <- ggplot(data = fm, aes(x = xcoord, y = ycoord)) +
geom_point(size = s.size,aes(color = tumor)) +
scale_color_manual(values = cmap) +
theme(legend.position = "none")+
ggtitle("Pathologists annotations")
grid.arrange(p1, p3, ncol=2)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/pro_scripts/DGE_spatial.r', echo=TRUE)
?estimateDisp
source(paste(c(scriptPath,"lib/zone_generation.r"),collapse ="/"))
source('~/ST-2018/CNNp/DGE/scripts/DGE_analysis/lib/zone_generation.r', echo=TRUE)
a <- c(1,0,0,0,1,1,2,2)
a
a <- as.factor(a)
a
relevel(a,ref = 2)
relevel(a,ref = "2")
library(optparse)
?add_option
